{
  // http://eslint.org/docs/rules/

  "env": {
    "es6": true,
  },

  "globals": {
	"concreteCompletion": false,
	"compileConcreteCompletion": false,
	"IfAbruptRejectPromise": false,
	"ReturnIfAbrupt": false,
	"GeneratorYield": false,
  },

  "rules": {
    ////////// Possible Errors //////////

    "no-cond-assign": 1,          // disallow assignment in conditional expressions
    "no-control-regex": 1,        // disallow control characters in regular expressions
    "no-debugger": 1,             // disallow use of debugger
    "no-dupe-keys": 1,            // disallow duplicate keys when creating object literals
    "no-empty": 1,                // disallow empty statements
    "no-empty-character-class": 1,          // disallow the use of empty character classes in regular expressions
    "no-ex-assign": 1,            // disallow assigning to the exception in a catch block
    "no-extra-boolean-cast": 1,   // disallow double-negation boolean casts in a boolean context
    "no-extra-semi": 1,           // disallow unnecessary semicolons
    "no-func-assign": 1,          // disallow overwriting functions written as function declarations
    "no-inner-declarations": 1,   // disallow function or variable declarations in nested blocks
    "no-invalid-regexp": 1,       // disallow invalid regular expression strings in the RegExp constructor
    "no-irregular-whitespace": 1, // disallow irregular whitespace outside of strings and comments
    "no-negated-in-lhs": 1,       // disallow negation of the left operand of an in expression
    "no-obj-calls": 1,            // disallow the use of object properties of the global object (Math and JSON) as functions
    "no-regex-spaces": 1,         // disallow multiple spaces in a regular expression literal
    "no-sparse-arrays": 1,        // disallow sparse arrays
    "no-unreachable": 1,          // disallow unreachable statements after a return, throw, continue, or break statement
    "use-isnan": 1,               // disallow comparisons with the value NaN
    "valid-typeof": 1,            // Ensure that the results of typeof are compared against a valid string


    ////////// Best Practices //////////

    "consistent-return": 1,     // require return statements to either always or never specify values
    "dot-notation": 1,          // encourages use of dot notation whenever possible
    "eqeqeq": 1,                // require the use of === and !==
    "no-alert": 1,              // disallow the use of alert, confirm, and prompt
    "no-caller": 1,             // disallow use of arguments.caller or arguments.callee
    "no-eval": 1,               // disallow use of eval()
    "no-extend-native": 1,      // disallow adding to native types
    "no-extra-bind": 1,         // disallow unnecessary function binding
    "no-fallthrough": 1,        // disallow fallthrough of case statements
    "no-implied-eval": 1,       // disallow use of eval()-like methods
    "no-iterator": 1,           // disallow usage of __iterator__ property
    "no-lone-blocks": 1,        // disallow unnecessary nested blocks
    "no-loop-func": 0,          // disallow creation of functions within loops
    "no-multi-spaces": 1,       // disallow use of multiple spaces
    "no-multi-str": 1,          // disallow use of multiline strings
    "no-native-reassign": 1,    // disallow reassignments of native objects
    "no-new": 1,                // disallow use of new operator when not part of the assignment or comparison
    "no-new-func": 1,           // disallow use of new operator for Function object
    "no-new-wrappers": 1,       // disallows creating new instances of String, Number, and Boolean
    "no-octal": 1,              // disallow use of octal literals
    "no-octal-escape": 1,       // disallow use of octal escape sequences in string literals, such as var foo = "Copyright \251";
    "no-proto": 1,              // disallow usage of __proto__ property
    "no-return-assign": 1,      // disallow use of assignment in return statement
    "no-script-url": 1,         // disallow use of javascript: urls.
    "no-sequences": 1,          // disallow use of comma operator
    "no-with": 1,               // disallow use of the with statement


    ////////// Variables //////////

    "no-delete-var": 1,               // disallow deletion of variables
    "no-label-var": 1,                // disallow labels that share a name with a variable
    "no-shadow": 1,                   // disallow declaration of variables already declared in the outer scope
    "no-shadow-restricted-names": 1,  // disallow shadowing of names such as arguments
    "no-undef": 1,                    // disallow use of undeclared variables unless mentioned in a /*global */ block


    ////////// Node.js //////////

    "no-process-exit": 1,       // disallow process.exit() (on by default in the node environment)

  }
}
